plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if(keystorePropertiesFile.exists()){
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def getMyVersionCode = { ->
    return project.hasProperty('versionCode') ? versionCode.toInteger() : 1
}

// get version name from the specified property argument `-PversionName` during the build call
def getMyVersionName = { ->
    return project.hasProperty('versionName') ? versionName : "1.0"
}


android {
    namespace 'com.example.cicdexample'
    compileSdk 34

    signingConfigs {

        release {
            if (System.getenv()["CI"]) { // CI=true is exported by Code-magic
                storeFile file(System.getenv()["CM_KEYSTORE_PATH"])
                storePassword System.getenv()["CM_KEYSTORE_PASSWORD"]
                keyAlias System.getenv()["CM_KEY_ALIAS"]
                keyPassword System.getenv()["CM_KEY_PASSWORD"]
            } else {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                storePassword keystoreProperties['storePassword']
            }
        }
    }


    defaultConfig {
        applicationId "com.example.cicdexample"
        minSdk 24
        targetSdk 34
        versionCode getMyVersionCode()
        versionName getMyVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "version"

    productFlavors {

        dev{
            dimension "version"
            versionCode 100
            versionName "1.0.0"
            applicationIdSuffix ".qa"
            //   manifestPlaceholders = [appIcon: '@mipmap/ic_launcher', appIconRound: '@mipmap/ic_launcher_round']
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher_qa",
                    appIconRound: "@mipmap/ic_launcher_qa_round"
            ]
        }

        uat{
            dimension "version"
            versionCode 100
            versionName "1.0.0"
            applicationIdSuffix ".uat"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher_uat",
                    appIconRound: "@mipmap/ic_launcher_uat_round"
            ]

        }

        sRelease {
            dimension "version"
            versionCode 100
            versionName "1.0.0"
            manifestPlaceholders = [appIcon: '@mipmap/ic_launcher', appIconRound: '@mipmap/ic_launcher_round']
        }
    }

    testOptions.unitTests {
        includeAndroidResources = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

    buildTypes {
        debug{
            minifyEnabled false
            debuggable true
            initWith debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

      /*  uat {
            minifyEnabled false
            debuggable true
            initWith debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".uat"
        }*/

        release {
            minifyEnabled false
            debuggable false
            // initWith debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation(platform("com.google.firebase:firebase-bom:32.7.2"))
    implementation("com.google.firebase:firebase-analytics")
}